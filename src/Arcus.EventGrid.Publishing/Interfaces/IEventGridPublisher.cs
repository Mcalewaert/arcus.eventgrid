using System.Collections.Generic;
using System.Threading.Tasks;

namespace Arcus.EventGrid.Publishing.Interfaces
{
    /// <summary>
    /// Contract for Event Grid publisher implementations which are the result of the <see cref="IBuilder.Build"/>.
    /// </summary>
    public interface IEventGridPublisher
    {
        /// <summary>
        ///     Url of the custom Event Grid topic
        /// </summary>
        string TopicEndpoint { get; }

        /// <summary>
        /// Publish an event grid message to the configured Event Grid topic
        /// </summary>
        /// <typeparam name="TData">Type of the specific EventData</typeparam>
        /// <param name="subject">Subject</param>
        /// <param name="eventType">Event Type</param>
        /// <param name="data">Typed event data</param>
        /// <param name="id">Unique id of the event, generated by default</param>
        Task Publish<TData>(string subject, string eventType, IEnumerable<TData> data, string id = null);
    }
}